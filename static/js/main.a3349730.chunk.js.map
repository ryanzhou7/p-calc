{"version":3,"sources":["assets/sample/63.jpg","redux/imageReducer.js","redux/combinedCanvasInfoReducer.js","components/Canvas/Canvas.js","models/coordinate.js","components/Adjuster/ImageAnalysis.js","models/canvasData.js","components/Adjuster/utils.js","components/Adjuster/Adjuster.js","utils/DomHelper.js","components/Main/Main.js","components/App/index.tsx","serviceWorker.js","redux/canvasEditReducer.js","redux/innerCanvasInfoReducer.js","redux/outerCanvasInfoReducer.js","redux/canvasSettingsReducer.js","redux/videoReducer.js","redux/index.js","index.js","assets/target/circle.png"],"names":["module","exports","initialState","source","image","setContext","context","type","payload","numColoredOuterPixels","numColoredInnerPixels","Canvas","props","dispatch","useDispatch","canvasDimensions","canvasWidth","canvasHeight","drawDimensions","drawWidth","drawHeight","canvasContext","setCanvasContext","canvasRef","useRef","useEffect","current","getContext","canvas","width","height","drawImage","className","ref","Coordinate","x","y","this","colorSpace","require","DeltaE","getDetectedPixels","canvasData","seedCoordinate","dimensions","threshold","detectedPixels","push","queue","visited","Set","add","length","neighbors","getNeighbors","pop","neighborCoor","key","getXYKey","isWithinBoundary","has","isSimiliar","suspect","getDeltaBetween","coor1","coor2","coor1Rgb","rgbPixel","coor1Lab","rgb","lab","r","g","b","coor1LabObj","L","A","B","coor2Rgb","coor2Lab","coor2LabObj","getDeltaE00","coor","neighborsDelta","coordinate","delta","deltaX","deltaY","updateImageData","recolor","leftX","rightX","numDetectedPixels","coloredPixels","i","verticalCoordinate","tint","String","CanvasDataHelper","imageArray","redIndex","getIndex","greenIndex","blueIndex","redValue","greenValue","blueValue","alphaIndex","alphaValue","alpha","pixelAtCoordinate","newColor","Number","newR","newG","newB","tintDelta","start","end","fullAnalysis","combinedCanvasInfo","detectionWidth","detectionHeight","imageData","getImageData","data","maxR","maxG","maxB","Math","sqrt","pow","max","rCoeff","bCoeff","parseInt","ImageAnalysis","maxCoor","middleX","intensity","value","findMax","maxDetectedPixels","nextMaxCoor","photoOriginY","distanceFromOrigin","abs","distanceFromTop","isTopToBottomSearch","boundary","MIN_SAFE_INTEGER","findNextMax","topDetectedPixels","bottomDetectedPixels","cuttOff","topPixels","bottomPixels","bounds","out","top","left","MAX_SAFE_INTEGER","undefined","right","bottom","findBounds","min","findCutOff","topPixelsCount","bottomPixelsCount","putImageData","getCorrectThreshold","getLoss","Promise","resolve","freqMap","Map","maxFreq","maxThreshold","loss","lossTruncatedKey","freq","get","set","AnalysisResults","outerPixels","useSelector","state","imageSource","imageForDownload","thresholdState","setThreshold","outerNumColoredPixels","innerNumColoredPixels","webcamContainerRef","setIsCameraOn","cameraState","canvasProps","combinedCanvasInfoReducer","changeThresholdBy","previous","currThreshold","utils","a","f","Card","Button","variant","onClick","window","scrollTo","offsetTop","toFixed","now","Date","fileName","document","createElement","href","download","click","DomHelper","toDateString","Body","Title","e","icon","size","withOrientationChange","useState","isCameraOn","videoConstraints","videoReducer","canvasSettings","isPortrait","webcamRef","autoAnalyzeContainerRef","capture","screenshot","getScreenshot","Image","onload","src","imageReducer","autoReanalyzeProps","popover","Popover","id","Content","style","display","OverlayTrigger","trigger","placement","overlay","audio","screenshotFormat","target","Adjuster","library","fab","faMinus","faPlus","faCamera","faQuestionCircle","App","Boolean","location","hostname","match","isOuterEdit","recoloredImageData","numColoredPixels","recolorHex","facingMode","exact","imageSmoothing","screenshotQuality","rootReducer","combineReducers","action","canvasEdit","innerCanvasInfo","outerCanvasInfo","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3349730.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/63.8a2e2c1e.jpg\";","export function setImageOnload(source) {\n  return (dispatch) => {\n    const image = new Image();\n    image.onload = () => {\n      dispatch({ type: \"IMAGE_SOURCE_SET\", payload: image });\n    };\n    image.src = source;\n  };\n}\n\nexport function setImage(image) {\n  return {\n    type: \"IMAGE_SET\",\n    payload: image,\n  };\n}\n\nconst initialState = {\n  source: null,\n  image: null,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"IMAGE_SOURCE_SET\":\n      return {\n        ...state,\n        source: action.payload,\n      };\n    case \"IMAGE_SET\":\n      return {\n        ...state,\n        image: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","export function setContext(context) {\n  return { type: \"SET_COMBINE_CONTEXT\", payload: context };\n}\nexport function setNumColoredInnerPixels(numInnerPixels) {\n  return { type: \"SET_NUM_COLORED_INNER_PIXELS\", payload: numInnerPixels };\n}\nexport function setNumColoredOuterPixels(numOuterPixels) {\n  return { type: \"SET_NUM_COLORED_OUTER_PIXELS\", payload: numOuterPixels };\n}\nconst initialState = {\n  context: null,\n  numColoredOuterPixels: 0,\n  numColoredInnerPixels: 0,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_COMBINE_CONTEXT\":\n      return {\n        ...state,\n        context: action.payload,\n      };\n    case \"SET_NUM_COLORED_INNER_PIXELS\":\n      return {\n        ...state,\n        numColoredInnerPixels: action.payload,\n      };\n    case \"SET_NUM_COLORED_OUTER_PIXELS\":\n      return {\n        ...state,\n        numColoredOuterPixels: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./index.css\";\n\nfunction Canvas(props) {\n  const dispatch = useDispatch();\n  const image = props.image;\n  const { canvasWidth, canvasHeight } = props.canvasDimensions;\n  const { drawWidth, drawHeight } = props.drawDimensions;\n  const [canvasContext, setCanvasContext] = props.canvasContext;\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const { current: canvas } = canvasRef;\n    const context = canvas.getContext(\"2d\");\n    dispatch(setCanvasContext(context));\n  }, []);\n\n  useEffect(() => {\n    if (image == null || canvasContext == null) {\n      return;\n    }\n\n    const { current: canvas } = canvasRef;\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n    canvasContext.drawImage(image, 0, 0, drawWidth, drawHeight);\n  }, [image, drawWidth, drawHeight, canvasWidth, canvasHeight]);\n\n  return (\n    <div className=\"mx-auto\">\n      <canvas ref={canvasRef} />\n    </div>\n  );\n}\n\nexport default Canvas;\n","export default class Coordinate {\n  constructor({ x, y }) {\n    this.x = x;\n    this.y = y;\n  }\n}\n","import Coordinate from \"../../models/coordinate\";\n\nconst colorSpace = require(\"color-space\");\nconst DeltaE = require(\"delta-e\");\n\nfunction getDetectedPixels(canvasData, seedCoordinate, dimensions, threshold) {\n  const detectedPixels = [];\n  detectedPixels.push(seedCoordinate);\n\n  let queue = [];\n  queue.push(seedCoordinate, seedCoordinate);\n  const visited = new Set();\n  visited.add(seedCoordinate);\n  while (queue.length > 0) {\n    const currentCoor = queue.pop();\n    const neighbors = getNeighbors(currentCoor);\n\n    for (let neighborCoor of neighbors) {\n      const key = getXYKey(neighborCoor.x, neighborCoor.y);\n\n      if (\n        isWithinBoundary(neighborCoor, dimensions) &&\n        !visited.has(key) &&\n        isSimiliar(neighborCoor, canvasData, seedCoordinate, threshold)\n      ) {\n        queue.push(neighborCoor);\n        detectedPixels.push(neighborCoor);\n      }\n      visited.add(key);\n    }\n  }\n\n  return detectedPixels;\n}\nfunction retinexWhiteBalance(canvasData, dimensions) {\n  const { width, height } = dimensions;\n\n  let maxR = 0;\n  let maxG = 0;\n  let maxB = 0;\n\n  let count = 0;\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height / 2; y++) {\n      // Only count pixels within the circle\n      const distance = Math.sqrt(Math.pow(x - 200, 2) + Math.pow(y - 200, 2));\n\n      if (distance < 188) {\n        const rgb = canvasData.rgbPixel({ x, y });\n        maxR = Math.max(rgb.r, maxR);\n        maxG = Math.max(rgb.g, maxG);\n        maxB = Math.max(rgb.b, maxB);\n        count++;\n      }\n    }\n  }\n\n  const rCoeff = maxG / maxR;\n  const bCoeff = maxG / maxB;\n\n  for (let x = 0; x < width; x++) {\n    for (let y = 0; y < height / 2; y++) {\n      const rgb = canvasData.rgbPixel({ x, y });\n      const r = parseInt(rgb.r * rCoeff);\n      const g = rgb.g;\n      const b = parseInt(rgb.b * bCoeff);\n      canvasData.recolor({ x, y }, { r, g, b });\n    }\n  }\n}\n\nfunction isSimiliar(suspect, canvasData, seedCoordinate, threshold) {\n  return getDeltaBetween(canvasData, suspect, seedCoordinate) < threshold;\n}\n\nfunction getDeltaBetween(canvasData, coor1, coor2) {\n  const coor1Rgb = canvasData.rgbPixel(coor1);\n  const coor1Lab = colorSpace.rgb.lab([coor1Rgb.r, coor1Rgb.g, coor1Rgb.b]);\n  const coor1LabObj = { L: coor1Lab[0], A: coor1Lab[1], B: coor1Lab[2] };\n  const coor2Rgb = canvasData.rgbPixel(coor2);\n\n  const coor2Lab = colorSpace.rgb.lab([coor2Rgb.r, coor2Rgb.g, coor2Rgb.b]);\n\n  const coor2LabObj = {\n    L: coor2Lab[0],\n    A: coor2Lab[1],\n    B: coor2Lab[2],\n  };\n\n  return DeltaE.getDeltaE00(coor1LabObj, coor2LabObj);\n}\n\nfunction isWithinBoundary(coor, dimensions) {\n  const { x, y } = coor;\n  return x > 0 && x < dimensions.width && y > 0 && y < dimensions.height;\n}\n\nfunction isEdge(coor, canvasData) {\n  const x = coor.x;\n  const y = coor.y;\n  let topLeft = getDeltaBetween(canvasData, coor, { x: x - 1, y: y - 1 });\n  let top = getDeltaBetween(canvasData, coor, { x: x, y: y - 1 });\n  let topRight = getDeltaBetween(canvasData, coor, { x: x + 1, y: y + 1 });\n  let right = getDeltaBetween(canvasData, coor, { x: x + 1, y });\n  let bottomRight = getDeltaBetween(canvasData, coor, { x: x + 1, y: y + 1 });\n  let bottom = getDeltaBetween(canvasData, coor, { x, y: y + 1 });\n  let bottomLeft = getDeltaBetween(canvasData, coor, { x: x - 1, y: y + 1 });\n  let left = getDeltaBetween(canvasData, coor, { x: x - 1, y: y + 1 });\n\n  const max = Math.max(\n    topLeft,\n    top,\n    topRight,\n    right,\n    bottomRight,\n    bottom,\n    bottomLeft,\n    left\n  );\n\n  return (\n    isDifferentAboveThreshold(topLeft, bottomRight, max) ||\n    isDifferentAboveThreshold(top, bottom, max) ||\n    isDifferentAboveThreshold(left, right, max) ||\n    isDifferentAboveThreshold(topRight, bottomLeft, max)\n  );\n}\n\nfunction isDifferentAboveThreshold(value1, value2, max) {\n  return Math.abs(value1 - value2) > 9;\n}\n\nconst neighborsDelta = [\n  [-1, -1],\n  [-1, 0],\n  [-1, 1],\n  [0, -1],\n  [0, 1],\n  [1, -1],\n  [1, 0],\n  [1, 1],\n];\nfunction getNeighbors(coordinate) {\n  const neighbors = [];\n  const { x, y } = coordinate;\n\n  for (let delta of neighborsDelta) {\n    const [deltaX, deltaY] = delta;\n    neighbors.push(new Coordinate({ x: deltaX + x, y: deltaY + y }));\n  }\n\n  return neighbors;\n}\n\nfunction updateImageData(\n  canvasData,\n  { leftX, rightX, height },\n  recolor,\n  detectedPixels\n) {\n  let numDetectedPixels = 0;\n  const coloredPixels = new Set();\n  for (let coordinate of detectedPixels) {\n    const { x, y } = coordinate;\n\n    // Go down a vertical line, stop slightly less than the middle\n    for (let i = y; i < height / 2; i++) {\n      const key = getXYKey(x, i);\n      const verticalCoordinate = { x, y: i };\n\n      // Color this pixel only if it has not been colored before and is within bounds\n      if (!coloredPixels.has(key) && leftX <= x && x <= rightX) {\n        coloredPixels.add(key);\n        canvasData.tint(verticalCoordinate, recolor);\n        numDetectedPixels++;\n      }\n    }\n  }\n\n  return numDetectedPixels;\n}\n\n/**\n * Get the unique key given the arguments\n * @param {*} x\n * @param {*} y\n */\nfunction getXYKey(x, y) {\n  return String(x) + String(y);\n}\n\nexport { getDetectedPixels, updateImageData, retinexWhiteBalance };\n","/**\n * Offsets access each value in a canvasContext.getImageData()\n */\nconst R_OFFSET = 0;\nconst G_OFFSET = 1;\nconst B_OFFSET = 2;\nconst ALPHA_OFFSET = 3;\n\nexport default class CanvasDataHelper {\n  constructor({ canvasWidth, imageArray }) {\n    this.canvasWidth = canvasWidth;\n    this.imageArray = imageArray;\n  }\n\n  rgbPixel({ x, y }) {\n    const redIndex = getIndex(x, y, this.canvasWidth) + R_OFFSET;\n    const greenIndex = getIndex(x, y, this.canvasWidth) + G_OFFSET;\n    const blueIndex = getIndex(x, y, this.canvasWidth) + B_OFFSET;\n\n    const redValue = this.imageArray[redIndex];\n    const greenValue = this.imageArray[greenIndex];\n    const blueValue = this.imageArray[blueIndex];\n    if (redValue !== 0 && greenValue !== 0 && blueValue !== 0) {\n      const alphaIndex = getIndex(x, y, this.canvasWidth) + ALPHA_OFFSET;\n      const alphaValue = this.imageArray[alphaIndex];\n    }\n    return { r: redValue, g: greenValue, b: blueValue };\n  }\n\n  rgbaPixel({ x, y }) {\n    const rgb = this.rgbPixel({ x, y });\n    const alphaIndex = getIndex(x, y, this.canvasWidth) + ALPHA_OFFSET;\n    const alphaValue = this.imageArray[alphaIndex];\n    rgb.alpha = alphaValue;\n    return rgb;\n  }\n\n  recolor(pixelAtCoordinate, newColor) {\n    const { r, g, b } = newColor;\n    const { x, y } = pixelAtCoordinate;\n\n    const redIndex = getIndex(x, y, this.canvasWidth) + R_OFFSET;\n    const greenIndex = getIndex(x, y, this.canvasWidth) + G_OFFSET;\n    const blueIndex = getIndex(x, y, this.canvasWidth) + B_OFFSET;\n\n    this.imageArray[redIndex] = Number(r);\n    this.imageArray[greenIndex] = Number(g);\n    this.imageArray[blueIndex] = Number(b);\n  }\n\n  tint(pixelAtCoordinate, newColor) {\n    const { r: newR, g: newG, b: newB } = newColor;\n\n    const { x, y } = pixelAtCoordinate;\n\n    const redIndex = getIndex(x, y, this.canvasWidth) + R_OFFSET;\n    const greenIndex = getIndex(x, y, this.canvasWidth) + G_OFFSET;\n    const blueIndex = getIndex(x, y, this.canvasWidth) + B_OFFSET;\n\n    const r = this.imageArray[redIndex];\n    const g = this.imageArray[greenIndex];\n    const b = this.imageArray[blueIndex];\n\n    this.imageArray[redIndex] += this.tintDelta(r, newR);\n    this.imageArray[greenIndex] += this.tintDelta(g, newG);\n    this.imageArray[blueIndex] += this.tintDelta(b, newB);\n  }\n\n  tintDelta(start, end) {\n    const tintFactor = 3;\n    return (end - start) / 3;\n  }\n}\n\n/**\n * Get the index in a canvasContext.getImageData() array given the x, y, and width\n * @param {*} x\n * @param {*} y\n * @param {*} width\n */\nfunction getIndex(x, y, width) {\n  return (x + y * width) * 4;\n}\n","import * as ImageAnalysis from \"./ImageAnalysis\";\nimport CanvasDataHelper from \"../../models/canvasData\";\n//import jsfeat from \"jsfeat\";\n\n// Consider that some non chart area will be capture, thus start the calculations from a padding, not from the very top\nconst START_HEIGHT = 12;\n\n// If the y coor is greater than this is number it is lower, thus within, the 5% rule\nconst WITHIN_HEIGHT = 182;\n\nfunction fullAnalysis(image, combinedCanvasInfo, canvasRef, threshold) {\n  const { width, height } = image;\n  const dimensions = {\n    detectionWidth: width,\n    detectionHeight: height,\n  };\n\n  // Edge canvas stuff\n  // const { current: canvas } = canvasRef;\n  // const edgeContext = canvas.getContext(\"2d\");\n  // const edgeCanvas = await getEdgeCanvasHelper(image, edgeContext);\n\n  /*\n   * Setup\n   */\n\n  const { context } = combinedCanvasInfo;\n  context.drawImage(image, 0, 0, width, height);\n  let imageData = context.getImageData(0, 0, width, height);\n\n  const canvasData = new CanvasDataHelper({\n    canvasWidth: dimensions.detectionWidth,\n    imageArray: imageData.data,\n  });\n\n  /*\n   * White balance\n   */\n\n  ImageAnalysis.retinexWhiteBalance(canvasData, { width, height });\n\n  /*\n   * Extremas\n   */\n\n  // Global extrema we look for the most \"X\" of a pixel, for ex. red\n  const maxCoor = findMax(canvasData, dimensions);\n  const maxDetectedPixels = ImageAnalysis.getDetectedPixels(\n    canvasData,\n    maxCoor,\n    { width, height },\n    threshold\n  );\n\n  // Now we look for the next \"X\" of a pixel that is some distance away from the one before\n  const nextMaxCoor = findNextMax(maxCoor, canvasData, width, height);\n\n  const nextMaxdetectedPixels = ImageAnalysis.getDetectedPixels(\n    canvasData,\n    nextMaxCoor,\n    { width, height },\n    threshold\n  );\n\n  /*\n   * Assign top / bottom\n   */\n\n  // assume that max coor is above next max\n  let topDetectedPixels = maxDetectedPixels;\n  let bottomDetectedPixels = nextMaxdetectedPixels;\n\n  // Means that max coor is not above next max\n  if (maxCoor.y > nextMaxCoor.y) {\n    // Switch them\n    [topDetectedPixels, bottomDetectedPixels] = [\n      bottomDetectedPixels,\n      topDetectedPixels,\n    ];\n  }\n\n  /*\n   * Recolor\n   */\n\n  //  Cutoff finding\n  const cuttOff = findCutOff(topDetectedPixels, bottomDetectedPixels);\n\n  // Recoloring\n  const recolor = { r: 0, g: 255, b: 0 };\n  const topPixelsCount = ImageAnalysis.updateImageData(\n    canvasData,\n    { leftX: cuttOff.top.left.x, rightX: cuttOff.top.right.x, height },\n    recolor,\n    topDetectedPixels\n  );\n\n  const bottomPixelsCount = ImageAnalysis.updateImageData(\n    canvasData,\n    { leftX: cuttOff.bottom.left.x, rightX: cuttOff.bottom.right.x, height },\n    { r: 0, g: 0, b: 255 },\n    bottomDetectedPixels\n  );\n\n  context.putImageData(\n    imageData,\n    0,\n    0,\n    0,\n    0,\n    dimensions.detectionWidth,\n    dimensions.detectionHeight\n  );\n\n  return { topPixelsCount, bottomPixelsCount };\n}\n\nfunction findNextMax(maxCoor, canvasData, width, height) {\n  // Setup\n  const photoOriginY = height / 2;\n  const middleX = width / 2;\n\n  const distanceFromOrigin = Math.abs(maxCoor.y - photoOriginY);\n  const distanceFromTop = maxCoor.y;\n\n  // If the already found coor's distance from the bottom (origin) is less than the tops then\n  // it's closer to the bottom and we are searching from top to bottom\n  const isTopToBottomSearch = distanceFromOrigin < distanceFromTop;\n  let boundary = distanceFromTop;\n\n  // Ensure that boundary is least some distance between the top and bottom so it won't be mistaken\n  boundary += isTopToBottomSearch ? -5 : 5;\n\n  let coor = { x: middleX };\n  let intensity = Number.MIN_SAFE_INTEGER;\n\n  let y = isTopToBottomSearch ? START_HEIGHT : photoOriginY;\n\n  while (y !== boundary) {\n    const coordinate = { x: middleX, y };\n    const rgbPixel = canvasData.rgbPixel(coordinate);\n\n    const value = rgbPixel.r * 2 - rgbPixel.b - rgbPixel.g;\n\n    if (value > intensity) {\n      coor = { y: y, x: middleX };\n      intensity = value;\n    }\n    isTopToBottomSearch ? y++ : y--;\n  }\n  return coor;\n}\n\nfunction findMax(canvasData, { detectionWidth, detectionHeight }) {\n  const middleX = detectionWidth / 2;\n  let coor = { x: middleX };\n  let intensity = 0;\n\n  // We use detection height / 2 so we only detect for the upper half of the image\n  for (let y = START_HEIGHT; y < detectionHeight / 2; y++) {\n    const coordinate = { x: middleX, y };\n    const rgbPixel = canvasData.rgbPixel(coordinate);\n\n    const value = rgbPixel.r * 2 - rgbPixel.b - rgbPixel.g;\n    if (value > intensity) {\n      coor.y = y;\n      intensity = value;\n    }\n  }\n\n  return coor;\n}\n\nfunction getCorrectThreshold(getLoss) {\n  return new Promise((resolve) => {\n    const freqMap = new Map();\n    let maxFreq = 0;\n    let maxThreshold = 20;\n    for (let x = 25; x >= 5; x--) {\n      const loss = getLoss(x);\n      const lossTruncatedKey = parseInt(loss);\n      let freq = freqMap.has(lossTruncatedKey)\n        ? freqMap.get(lossTruncatedKey)\n        : 0;\n      freq++;\n      freqMap.set(lossTruncatedKey, freq);\n      if (freq >= maxFreq) {\n        maxFreq = freq;\n        maxThreshold = x;\n      }\n    }\n    resolve(maxThreshold);\n  });\n}\n\nfunction calculatedLossPercent(outerPixels, innerPixels) {\n  let percentage = (100 * (outerPixels - innerPixels)) / outerPixels;\n  return percentage.toFixed(2);\n}\n\n/**\n * We consider something \"within\" if the end\n *\n *\n * Divide the chart up into 4 quadrants. Let quadrant I be the top right and quadrant II be the top left.\n * The logic for I and II are the same but just applied to one side\n *\n * There are 6 possible scenarios\n * 1. Both top and bottom ends are \"Within\"\n * 2. Top is not within and bottom is, top horizontally extends beyond the bottom end (Top longer)\n *\n *   Top longer | Top within | Bottom within\n * 3. yes         yes           no\n * 4. no          no            yes\n * 5. yes         no            no\n * 6. no          no            no\n * Case 3-6 we just \"double bound\" the cutoff see function\n *\n * @param {*} topPixels\n * @param {*} bottomPixels\n */\nfunction findCutOff(topPixels, bottomPixels) {\n  const bounds = findBounds(topPixels, bottomPixels);\n\n  /*\n   * Leftside\n   */\n\n  // both are NOT within\n  if (\n    !(\n      bounds.top.left.y > WITHIN_HEIGHT && bounds.bottom.left.y > WITHIN_HEIGHT\n    ) &&\n    // bottom is within and the top is more left\n    !(\n      bounds.bottom.left.y > WITHIN_HEIGHT &&\n      bounds.top.left.x < bounds.bottom.left.x\n    )\n  ) {\n    // Cap the cutoff to the more limiting of the x on the left side\n    const left = Math.max(bounds.top.left.x, bounds.bottom.left.x);\n    bounds.top.left.x = left;\n    bounds.bottom.left.x = left;\n  }\n\n  /*\n   * Rightside\n   */\n\n  // both are NOT within\n  if (\n    !(\n      bounds.top.right.y > WITHIN_HEIGHT &&\n      bounds.bottom.right.y > WITHIN_HEIGHT\n    ) &&\n    // bottom is within and the top is more left\n    !(\n      bounds.bottom.right.y > WITHIN_HEIGHT &&\n      bounds.top.right.x > bounds.bottom.right.x\n    )\n  ) {\n    const right = Math.min(bounds.top.right.x, bounds.bottom.right.x);\n    bounds.top.right.x = right;\n    bounds.bottom.right.x = right;\n  }\n  return bounds;\n}\n\n/**\n * Find the left and right most\n * @param {*} topPixels\n * @param {*} bottomPixels\n */\nfunction findBounds(topPixels, bottomPixels) {\n  const out = {\n    top: {\n      left: {\n        x: Number.MAX_SAFE_INTEGER,\n        y: undefined,\n      },\n      right: {\n        x: 0,\n        y: undefined,\n      },\n    },\n    bottom: {\n      left: {\n        x: Number.MAX_SAFE_INTEGER,\n        y: undefined,\n      },\n      right: {\n        x: 0,\n        y: undefined,\n      },\n    },\n  };\n\n  for (let coordinate of topPixels) {\n    const { x, y } = coordinate;\n    if (x < out.top.left.x) {\n      out.top.left.x = x;\n      out.top.left.y = y;\n    }\n    if (x > out.top.right.x) {\n      out.top.right.x = x;\n      out.top.right.y = y;\n    }\n  }\n\n  for (let coordinate of bottomPixels) {\n    const { x, y } = coordinate;\n    if (x < out.bottom.left.x) {\n      out.bottom.left.x = x;\n      out.bottom.left.y = y;\n    }\n    if (x > out.bottom.right.x) {\n      out.bottom.right.x = x;\n      out.bottom.right.y = y;\n    }\n  }\n\n  return out;\n}\n\n/* Not in use  */\nasync function getEdgeCanvasHelper(image, context) {\n  // const { width, height } = image;\n  // context.drawImage(image, 0, 0, width, height);\n  // let imageData = context.getImageData(0, 0, width, height);\n  // const columns = 450,\n  //   rows = 320,\n  //   data_type = jsfeat.U8_t;\n  // let img_u8 = new jsfeat.matrix_t(columns, rows, data_type);\n  // jsfeat.imgproc.grayscale(imageData.data, width, height, img_u8);\n  // let r = 3; // 0 -4\n  // let kernel_size = (r + 1) << 1;\n  // let low_threshold = 120; // 1 - 127\n  // let high_threshold = 120; // 1 - 127\n  // jsfeat.imgproc.gaussian_blur(img_u8, img_u8, kernel_size, 0);\n  // jsfeat.imgproc.canny(img_u8, img_u8, low_threshold, high_threshold);\n  // // render result back to canvas\n  // var data_u32 = new Uint32Array(imageData.data.buffer);\n  // var alpha = 0xff << 24;\n  // var i = img_u8.cols * img_u8.rows,\n  //   pix = 0;\n  // while (--i >= 0) {\n  //   pix = img_u8.data[i];\n  //   data_u32[i] = alpha | (pix << 16) | (pix << 8) | pix;\n  // }\n  // // Draw canny\n  // context.putImageData(imageData, 0, 0, 0, 0, width, height);\n  // const edgeCanvas = new CanvasDataHelper({\n  //   canvasWidth: width,\n  //   imageArray: imageData.data,\n  // });\n  // return edgeCanvas;\n}\n\nexport { calculatedLossPercent, fullAnalysis, getCorrectThreshold };\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as combinedCanvasInfoReducer from \"../../redux/combinedCanvasInfoReducer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Canvas from \"../Canvas/Canvas\";\nimport * as utils from \"./utils\";\nimport * as DomHelper from \"../../utils/DomHelper\";\n\nfunction AnalysisResults(props) {\n  const dispatch = useDispatch();\n\n  // State\n  const combinedCanvasInfo = useSelector((state) => state.combinedCanvasInfo);\n  const imageSource = useSelector((state) => state.image.source);\n  const imageForDownload = useSelector((state) => state.image.image);\n  const [threshold, setThreshold] = props.thresholdState;\n\n  const outerNumColoredPixels = combinedCanvasInfo.numColoredOuterPixels;\n  const innerNumColoredPixels = combinedCanvasInfo.numColoredInnerPixels;\n\n  // Props\n  const { webcamContainerRef } = props;\n  const [, setIsCameraOn] = props.cameraState;\n\n  // Child props\n  const canvasProps = {\n    ...props,\n    canvasContext: [\n      combinedCanvasInfo.context,\n      combinedCanvasInfoReducer.setContext,\n    ],\n  };\n\n  const canvasRef = useRef(null);\n\n  function changeThresholdBy(value) {\n    setThreshold((previous) => Math.max(0, previous + value));\n  }\n\n  useEffect(() => {\n    async function f() {\n      if (imageSource) {\n        const threshold = await utils.getCorrectThreshold(fullAnalysis);\n        setThreshold(threshold);\n      }\n    }\n    f();\n  }, [imageSource]);\n\n  useEffect(() => {\n    if (imageSource) {\n      fullAnalysis(threshold);\n    }\n  }, [threshold]);\n\n  function fullAnalysis(currThreshold) {\n    const { topPixelsCount, bottomPixelsCount } = utils.fullAnalysis(\n      imageSource,\n      combinedCanvasInfo,\n      canvasRef,\n      currThreshold\n    );\n\n    dispatch(\n      combinedCanvasInfoReducer.setNumColoredOuterPixels(topPixelsCount)\n    );\n    dispatch(\n      combinedCanvasInfoReducer.setNumColoredInnerPixels(bottomPixelsCount)\n    );\n\n    return (100 * (topPixelsCount - bottomPixelsCount)) / topPixelsCount;\n  }\n\n  return (\n    <>\n      <Card>\n        {imageSource && <h2 className=\"card-title\">Results</h2>}\n        <div>\n          <Canvas {...canvasProps} />\n          {imageSource && (\n            <div\n              className={`d-flex justify-content-around align-items-center mb-4`}\n            >\n              <div>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => {\n                    setIsCameraOn(true);\n                    window.scrollTo(0, webcamContainerRef.current.offsetTop);\n                  }}\n                >\n                  Retake picture\n                </Button>\n\n                <div>\n                  <h3 className=\"mt-4\">\n                    Loss:{\" \"}\n                    {utils.calculatedLossPercent(\n                      outerNumColoredPixels,\n                      innerNumColoredPixels\n                    )}\n                    %\n                  </h3>\n                  <div className=\"mt-4\">\n                    <Button\n                      variant=\"outline-primary\"\n                      onClick={() => {\n                        const now = new Date();\n                        DomHelper.downloadJpegInClient(\n                          imageForDownload,\n                          now.toDateString()\n                        );\n                      }}\n                    >\n                      Download original\n                    </Button>{\" \"}\n                  </div>\n                </div>\n              </div>\n\n              <Card>\n                <Card.Body>\n                  <Card.Title>Sensitivity: {threshold}</Card.Title>\n                  <div className=\"container\">\n                    <div className=\"row justify-content-around mb-3\">\n                      <Button\n                        onClick={(e) => {\n                          changeThresholdBy(-1);\n                        }}\n                      >\n                        <FontAwesomeIcon icon=\"minus\" size=\"1x\" />\n                      </Button>\n                      <Button\n                        onClick={(e) => {\n                          changeThresholdBy(1);\n                        }}\n                      >\n                        <FontAwesomeIcon icon=\"plus\" size=\"1x\" />\n                      </Button>\n                    </div>\n                    <div className=\"row justify-content-between\">\n                      <Button\n                        className=\"mr-1\"\n                        onClick={(e) => {\n                          changeThresholdBy(-3);\n                        }}\n                      >\n                        <FontAwesomeIcon icon=\"minus\" size=\"1x\" />\n                        {\"  \"}\n                        <FontAwesomeIcon icon=\"minus\" size=\"1x\" />\n                      </Button>\n                      <Button\n                        onClick={(e) => {\n                          changeThresholdBy(3);\n                        }}\n                      >\n                        <FontAwesomeIcon icon=\"plus\" size=\"1x\" />\n                        {\"  \"}\n                        <FontAwesomeIcon icon=\"plus\" size=\"1x\" />\n                      </Button>\n                    </div>\n                  </div>\n                </Card.Body>\n              </Card>\n            </div>\n          )}\n        </div>\n\n        {/* Used for edge canvas */}\n        {/* <canvas style={{ display: \"none\" }} ref={canvasRef} /> */}\n      </Card>\n    </>\n  );\n}\n\nexport default AnalysisResults;\n","/**\n * Return the image with it's source loaded from an file input\n * @param {*} event\n */\nasync function getImageFromInput(event) {\n  return new Promise((resolve, reject) => {\n    if (event.target.files && event.target.files.item(0)) {\n      const imageSource = URL.createObjectURL(event.target.files[0]);\n      const image = new Image();\n      image.onload = () => resolve(image);\n      image.src = imageSource;\n      return;\n    }\n    reject(\"No file selected\");\n  });\n}\n\nfunction downloadJpegInClient(imageData, fileName) {\n  const a = document.createElement(\"a\");\n  a.href = imageData;\n  a.download = fileName + \".jpeg\";\n  a.click();\n}\n\nfunction setFromInput(event, setter) {\n  const { value } = event.target;\n  setter(value);\n}\n\nexport { getImageFromInput, setFromInput, downloadJpegInClient };\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Button, Card, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { withOrientationChange } from \"react-device-detect\";\nimport Webcam from \"react-webcam\";\nimport * as imageReducer from \"../../redux/imageReducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Adjuster from \"../Adjuster/Adjuster\";\nimport target from \"../../assets/target/circle.png\";\nimport sample from \"../../assets/sample/63.jpg\";\nimport \"./index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// For the analysis\nconst START_THRESHOLD = 20;\n\nfunction Auto(props) {\n  // Setup\n  const dispatch = useDispatch();\n  const [threshold, setThreshold] = useState(START_THRESHOLD);\n  const [isCameraOn, setIsCameraOn] = useState(true);\n\n  // Redux\n  const videoConstraints = useSelector(\n    (state) => state.videoReducer.videoConstraints\n  );\n  const image = useSelector((state) => state.image.source);\n  const canvasDimensions = useSelector(\n    (state) => state.canvasSettings.canvasDimensions\n  );\n  const combinedCanvasInfo = useSelector((state) => state.combinedCanvasInfo);\n\n  // Props\n  const { isPortrait } = props;\n\n  // Ref\n  const webcamContainerRef = useRef(null);\n  const webcamRef = useRef(null);\n  const autoAnalyzeContainerRef = useRef(null);\n\n  // Set a default image for debugging bad images\n  useEffect(() => {\n    //dispatch(imageReducer.setImageOnload(sample));\n  }, []);\n\n  const capture = () => {\n    if (!isCameraOn) {\n      setIsCameraOn(true);\n      return;\n    }\n\n    const screenshot = webcamRef.current.getScreenshot();\n    dispatch(imageReducer.setImageOnload(screenshot));\n    dispatch(imageReducer.setImage(screenshot));\n    window.scrollTo(0, autoAnalyzeContainerRef.current.offsetTop);\n\n    setIsCameraOn(false);\n  };\n\n  // Children props setup\n  const autoReanalyzeProps = {\n    webcamRef,\n    webcamContainerRef,\n    image: image,\n    canvasDimensions: {\n      canvasWidth: canvasDimensions.width,\n      canvasHeight: canvasDimensions.height,\n    },\n    drawDimensions: {\n      drawWidth: canvasDimensions.width,\n      drawHeight: canvasDimensions.height,\n    },\n    isPortrait,\n    thresholdState: [threshold, setThreshold],\n    cameraState: [isCameraOn, setIsCameraOn],\n  };\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Content>\n        Draw your chart with red sharpie. Align the red target's circle\n        concentrically with the chart's smallest circle that still encompasses\n        all of the the drawn lines for increased accuracy. Also ensure the\n        target cross is aligned with the chart. Camera focus will happen\n        automatically. Tap the (?) again to close this popover.\n      </Popover.Content>\n    </Popover>\n  );\n  return (\n    <div className=\"App mt-2\">\n      <h2 className=\"card-title\" style={{ display: \"inline\" }}>\n        Capture chart{\" \"}\n      </h2>\n      <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n        <FontAwesomeIcon icon=\"question-circle\" size=\"2x\" />\n      </OverlayTrigger>\n      <Card className=\"mt-4\">\n        <div className=\"mx-auto\">\n          <div className=\"capture-container mx-auto\" ref={webcamContainerRef}>\n            {isCameraOn && (\n              <>\n                <Webcam\n                  ref={webcamRef}\n                  audio={false}\n                  height={videoConstraints.height}\n                  screenshotFormat=\"image/jpeg\"\n                  width={videoConstraints.width}\n                  videoConstraints={videoConstraints}\n                />\n                <div className=\"overlay\">\n                  <img\n                    className=\"target\"\n                    //width -20 leaves some padding on the left and right side\n                    style={{ width: videoConstraints.width - 20 }}\n                    src={target}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"my-2 z-top mx-auto\">\n          <Button className=\"capture-button\" onClick={() => capture()}>\n            <FontAwesomeIcon icon=\"camera\" size=\"3x\" />\n          </Button>\n        </div>\n      </Card>\n\n      <div className=\"mt-4\" ref={autoAnalyzeContainerRef}>\n        <Adjuster {...autoReanalyzeProps} />\n      </div>\n      <br />\n      <br />\n      <br />\n    </div>\n  );\n}\n\nexport default withOrientationChange(Auto);\n","import React from \"react\";\nimport Main from \"../Main/Main\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faMinus, faPlus, faCamera, faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(fab, faMinus, faPlus, faCamera, faQuestionCircle);\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function toggleIsOuterEdit() {\n  return { type: \"TOGGLE_IS_OUTER_EDIT\" };\n}\n\nconst initialState = {\n  isOuterEdit: true,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"TOGGLE_IS_OUTER_EDIT\":\n      return {\n        ...state,\n        isOuterEdit: !state.isOuterEdit,\n      };\n    default:\n      return state;\n  }\n}\n","export function setContext(context) {\n  return { type: \"SET_INNER_CONTEXT\", payload: context };\n}\nexport function setRecoloredImageData(recoloredImageData) {\n  return {\n    type: \"SET_INNER_RECOLORED_IMAGE_DATA\",\n    payload: recoloredImageData,\n  };\n}\nexport function setDetectedPixels(detectedPixels) {\n  return { type: \"SET_INNER_DETECTED_PIXELS\", payload: detectedPixels };\n}\nexport function setNumColoredPixelsCallback(dispatch) {\n  return (numColoredPixels) => {\n    dispatch(setNumColoredPixels(numColoredPixels));\n  };\n}\n\nexport function setNumColoredPixels(numColoredPixels) {\n  return { type: \"SET_INNER_NUM_COLORED_PIXELS\", payload: numColoredPixels };\n}\n\nexport function setRecolorHex(hex) {\n  return { type: \"SET_INNER_RECOLOR_HEX\", payload: hex };\n}\nconst initialState = {\n  context: null,\n  recoloredImageData: null,\n  numColoredPixels: 0,\n  detectedPixels: [],\n  recolorHex: \"#00FF00\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_INNER_CONTEXT\":\n      return {\n        ...state,\n        context: action.payload,\n      };\n    case \"SET_INNER_RECOLORED_IMAGE_DATA\":\n      return {\n        ...state,\n        recoloredImageData: action.payload,\n      };\n    case \"SET_INNER_DETECTED_PIXELS\":\n      return {\n        ...state,\n        detectedPixels: action.payload,\n      };\n    case \"SET_INNER_NUM_COLORED_PIXELS\":\n      return {\n        ...state,\n        numColoredPixels: action.payload,\n      };\n\n    case \"SET_INNER_RECOLOR_HEX\":\n      return {\n        ...state,\n        recolorHex: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","export function setContext(context) {\n  return { type: \"SET_OUTER_CONTEXT\", payload: context };\n}\nexport function setRecoloredImageData(recoloredImageData) {\n  return {\n    type: \"SET_OUTER_RECOLORED_IMAGE_DATA\",\n    payload: recoloredImageData,\n  };\n}\nexport function setDetectedPixels(detectedPixels) {\n  return { type: \"SET_OUTER_DETECTED_PIXELS\", payload: detectedPixels };\n}\nexport function setNumColoredPixelsCallback(dispatch) {\n  return (numColoredPixels) => {\n    dispatch(setNumColoredPixels(numColoredPixels));\n  };\n}\n\nexport function setNumColoredPixels(numColoredPixels) {\n  return { type: \"SET_OUTER_NUM_COLORED_PIXELS\", payload: numColoredPixels };\n}\n\nexport function setRecolorHex(hex) {\n  return { type: \"SET_OUTER_RECOLOR_HEX\", payload: hex };\n}\n\nconst initialState = {\n  context: null,\n  recoloredImageData: null,\n  numColoredPixels: 0,\n  detectedPixels: [],\n  recolorHex: \"#FFA500\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_OUTER_CONTEXT\":\n      return {\n        ...state,\n        context: action.payload,\n      };\n    case \"SET_OUTER_RECOLORED_IMAGE_DATA\":\n      return {\n        ...state,\n        recoloredImageData: action.payload,\n      };\n    case \"SET_OUTER_DETECTED_PIXELS\":\n      return {\n        ...state,\n        detectedPixels: action.payload,\n      };\n    case \"SET_OUTER_NUM_COLORED_PIXELS\":\n      return {\n        ...state,\n        numColoredPixels: action.payload,\n      };\n\n    case \"SET_OUTER_RECOLOR_HEX\":\n      return {\n        ...state,\n        recolorHex: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","export function setCanvasDimensions(dimensions) {\n  return { type: \"SET_CANVAS_DIMENSIONS\", payload: dimensions };\n}\n\nconst initialState = {\n  canvasDimensions: {\n    width: 400,\n    height: 400,\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_CANVAS_DIMENSIONS\":\n      return {\n        ...state,\n        source: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  videoConstraints: {\n    // These numbers should match those in the canvas settings\n    width: 400,\n    height: 400,\n    facingMode: { exact: \"environment\" },\n    //facingMode: \"user\",\n    audio: false,\n    imageSmoothing: true,\n    screenshotQuality: 1,\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport imageReducer from \"./imageReducer\";\nimport canvasEditReducer from \"./canvasEditReducer\";\nimport innerCanvasInfoReducer from \"./innerCanvasInfoReducer\";\nimport outerCanvasInfoReducer from \"./outerCanvasInfoReducer\";\nimport combinedCanvasInfoReducer from \"./combinedCanvasInfoReducer\";\nimport canvasSettingsReducer from \"./canvasSettingsReducer\";\nimport videoReducer from \"./videoReducer\";\n\nconst rootReducer = combineReducers({\n  image: imageReducer,\n  canvasEdit: canvasEditReducer,\n  innerCanvasInfo: innerCanvasInfoReducer,\n  outerCanvasInfo: outerCanvasInfoReducer,\n  combinedCanvasInfo: combinedCanvasInfoReducer,\n  canvasSettings: canvasSettingsReducer,\n  videoReducer: videoReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/circle.9036c121.png\";"],"sourceRoot":""}